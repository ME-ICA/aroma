# Python CircleCI 2.1 configuration file
#
#
#
version: 2.1
orbs:
  codecov: codecov/codecov@1.0.5
jobs:

  unittest_36:
    docker:
      - image: continuumio/miniconda3
    working_directory: /tmp/src/aroma
    steps:
      - checkout
      - restore_cache:
          key: conda-py36-v1-{{ checksum "setup.cfg" }}
      - run:
          name: Generate environment
          command: |
            apt-get update
            apt-get install -yqq make
            if [ ! -d /opt/conda/envs/aroma_py36 ]; then
              conda create -yq -n aroma_py36 python=3.6
              source activate aroma_py36
              pip install -e ".[test]"
            fi
      - run:
          name: Running unit tests
          command: |
            source activate aroma_py36
            make unittest
            mkdir /tmp/src/coverage
            mv /tmp/src/aroma/.coverage /tmp/src/coverage/.coverage.py36
      - save_cache:
          key: conda-py36-v1-{{ checksum "setup.cfg" }}
          paths:
              - /opt/conda/envs/aroma_py36
      - persist_to_workspace:
          root: /tmp
          paths:
              - src/coverage/.coverage.py36

  makeenv_37:
    docker:
      - image: continuumio/miniconda3
    working_directory: /tmp/src/aroma
    steps:
      - checkout
      - restore_cache:
          key: conda-py37-v2-{{ checksum "setup.cfg" }}
      - run:
          name: Generate environment
          command: |
            if [ ! -d /opt/conda/envs/aroma_py37 ]; then
              conda create -yq -n aroma_py37 python=3.7
              source activate aroma_py37
              pip install -e ".[test,doc]"
            fi
      - save_cache:
          key: conda-py37-v2-{{ checksum "setup.cfg" }}
          paths:
              - /opt/conda/envs/aroma_py37

  unittest_37:
    docker:
      - image: continuumio/miniconda3
    working_directory: /tmp/src/aroma
    steps:
      - checkout
      - restore_cache:
          key: conda-py37-v2-{{ checksum "setup.cfg" }}
      - run:
          name: Running unit tests
          command: |
            apt-get update
            apt-get install -yqq make
            source activate aroma_py37  # depends on makeenv_37
            make unittest
            mkdir /tmp/src/coverage
            mv /tmp/src/aroma/.coverage /tmp/src/coverage/.coverage.py37
      - save_cache:
          key: conda-py36-v1-{{ checksum "setup.cfg" }}
          paths:
              - /opt/conda/envs/aroma_py36
      - persist_to_workspace:
          root: /tmp
          paths:
              - src/coverage/.coverage.py37

  unittest_38:
    docker:
      - image: continuumio/miniconda3
    working_directory: /tmp/src/aroma
    steps:
      - checkout
      - restore_cache:
          key: conda-py38-v1-{{ checksum "setup.cfg" }}
      - run:
          name: Generate environment
          command: |
            apt-get update
            apt-get install -yqq make
            if [ ! -d /opt/conda/envs/aroma_py38 ]; then
              conda create -yq -n aroma_py38 python=3.8
              source activate aroma_py38
              pip install -e ".[test]"
            fi
      - run:
          name: Running unit tests
          command: |
            source activate aroma_py38
            make unittest
            mkdir /tmp/src/coverage
            mv /tmp/src/aroma/.coverage /tmp/src/coverage/.coverage.py38
      - save_cache:
          key: conda-py38-v1-{{ checksum "setup.cfg" }}
          paths:
              - /opt/conda/envs/aroma_py38
      - persist_to_workspace:
          root: /tmp
          paths:
              - src/coverage/.coverage.py38

  unittest_39:
    docker:
      - image: continuumio/miniconda3
    working_directory: /tmp/src/aroma
    steps:
      - checkout
      - restore_cache:
          key: conda-py39-v1-{{ checksum "setup.cfg" }}
      - run:
          name: Generate environment
          command: |
            apt-get update
            apt-get install -yqq make
            if [ ! -d /opt/conda/envs/aroma_py39 ]; then
              conda create -yq -n aroma_py39 python=3.9
              source activate aroma_py39
              pip install -e ".[test]"
            fi
      - run:
          name: Running unit tests
          command: |
            source activate aroma_py39
            make unittest
            mkdir /tmp/src/coverage
            mv /tmp/src/aroma/.coverage /tmp/src/coverage/.coverage.py39
      - save_cache:
          key: conda-py39-v1-{{ checksum "setup.cfg" }}
          paths:
              - /opt/conda/envs/aroma_py39
      - persist_to_workspace:
          root: /tmp
          paths:
              - src/coverage/.coverage.py39

  integrationtest_36:
    docker:
      - image: continuumio/miniconda3
    working_directory: /tmp/src/aroma
    steps:
      - checkout
      - restore_cache:
          key: conda-py36-v1-{{ checksum "setup.cfg" }}
      - run:
          name: Generate environment
          command: |
            apt-get update
            apt-get install -yqq make
            if [ ! -d /opt/conda/envs/aroma_py36 ]; then
              conda create -yq -n aroma_py36 python=3.6
              source activate aroma_py36
              pip install -e ".[test]"
            fi
      - run:
          name: Run integration tests
          no_output_timeout: 10m
          command: |
            source activate aroma_py36
            make integration
            mkdir /tmp/src/coverage
            mv /tmp/src/aroma/.coverage /tmp/src/coverage/.coverage.integration36
      - store_artifacts:
          path: /tmp/data
      - persist_to_workspace:
          root: /tmp
          paths:
              - src/coverage/.coverage.integration36

  integrationtest_37:
    docker:
      - image: continuumio/miniconda3
    working_directory: /tmp/src/aroma
    steps:
      - checkout
      - restore_cache:
          key: conda-py37-v2-{{ checksum "setup.cfg" }}
      - run:
          name: Run integration tests
          no_output_timeout: 10m
          command: |
            apt-get update
            apt-get install -yqq make
            source activate aroma_py37  # depends on makeenv_37
            make integration
            mkdir /tmp/src/coverage
            mv /tmp/src/aroma/.coverage /tmp/src/coverage/.coverage.integration37
      - store_artifacts:
          path: /tmp/data
      - persist_to_workspace:
          root: /tmp
          paths:
              - src/coverage/.coverage.integration37

  style_check:
    docker:
      - image: continuumio/miniconda3
    working_directory: /tmp/src/aroma
    steps:
      - checkout
      - restore_cache:
          key: conda-py37-v2-{{ checksum "setup.cfg" }}
      - run:
          name: Style check
          command: |
            apt-get update
            apt-get install -yqq make
            source activate aroma_py37  # depends on makeenv_37
            make lint
      - store_artifacts:
          path: /tmp/data/lint

  build_docs:
    docker:
      - image: continuumio/miniconda3
    working_directory: /tmp/src/aroma
    steps:
      - checkout
      - restore_cache:  # load environment
          key: conda-py37-v2-{{ checksum "setup.cfg" }}
      - run:
          name: Build documentation
          command: |
            apt-get update
            apt-get install -yqq make
            source activate aroma_py37  # depends on makeenv_37
            make -C docs html
      - store_artifacts:
          path: /tmp/src/aroma/docs/_build/html

  merge_coverage:
    docker:
      - image: continuumio/miniconda3
    working_directory: /tmp/src/aroma
    steps:
      - attach_workspace:
          at: /tmp
      - checkout
      - restore_cache:
          key: conda-py37-v2-{{ checksum "setup.cfg" }}
      - run:
          name: Merge coverage files
          command: |
            apt-get update
            apt-get install -yqq curl
            source activate aroma_py37  # depends on makeenv37
            cd /tmp/src/coverage/
            coverage combine
            coverage xml
      - store_artifacts:
          path: /tmp/src/coverage
      - codecov/upload:
          file: /tmp/src/coverage/coverage.xml

workflows:
  version: 2.1
  build_test:
    jobs:
      - makeenv_37
      - unittest_36
      - unittest_37:
          requires:
            - makeenv_37
      - unittest_38
      - unittest_39
      - integrationtest_36
      - integrationtest_37:
          requires:
            - makeenv_37
      - style_check:
          requires:
            - makeenv_37
      - build_docs:
          requires:
            - makeenv_37
      - merge_coverage:
          requires:
            - unittest_36
            - unittest_37
            - unittest_38
            - unittest_39
            - integrationtest_36
            - integrationtest_37
            - style_check
